
apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'eclipse'

def snobotSimVersion = "0.2"

repositories {
    maven {
        name = "WPI"
        url = "http://first.wpi.edu/FRC/roborio/maven/release"
    }
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    maven {
        url "http://raw.githubusercontent.com/pjreiniger/maven_repo/master/"
    }
    maven {
        url "http://dev.imjac.in/maven/"
    }
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDirs = ["src", "../SnobotRobotLibs/src"]
        }
    }
    
    test {
        java {
            srcDirs = ["test/unit_tests", "test/simulator"]
        }
    }
}

dependencies {
    compile 'edu.wpi.first.wpilib.networktables.java:NetworkTables:3.1.7:desktop'
    compile 'edu.wpi.first.wpilibj:athena:2017.3.1'
    compile 'com.googlecode.json-simple:json-simple:1.1.1'
    
    compile files('../SnobotRobotLibs/dependencies/RIOdroid.jar')
    compile 'thirdparty.frc.ctre:Toolsuite-Java:4.4.1.11'

    // Snobot Sim
    testCompile    'com.snobot.simulator:snobot_sim_gui:'  + snobotSimVersion + ':all'
    testCompile    'com.snobot.simulator:snobot_sim_java:' + snobotSimVersion + ':uber_native-linux'
    testCompile    'com.snobot.simulator:snobot_sim_java:' + snobotSimVersion + ':uber_native-windows'
}

test {
	ignoreFailures = true
}


jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
    
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,  exclude: 
                ['com/team254/lib/trajectory/gen/**',
                 'com/snobot2017/xtrajectory_gen/**'
                ])
        })
    }
}


task wrapper(type: Wrapper) {
    gradleVersion = '4.1'
}
